/*
Question 3								         (25 Marks)

Implement a BirdSightingMachine class that can be used to count the number of bird sightings for a bird watch group.
Include methods to clear the machine state, to record a sighting of BirdA, to record a sighting of BirdB and to get the number of sightings for both birds.
Your program should provide code to run 3 separate season tallies with sample numbers of sightings to show the BirdSightingMachine class in action.

Example screenshot:

Results of season:
Bird A: 78 sightings
Bird B: 104 sightings
Bird B wins!
Results of season:
Bird A: 38 sightings
Bird B: 37 sightings
Bird A wins!
Results of season:
Bird A: 52 sightings
Bird B: 52 sightings
It's a draw!

*/
// Both programs in same package.
package c2a2q3_2022_NiallMurray;
// Imported classes.

import java.util.Random;
// Class to test BirdSightingMachine class.
// Number of sightings generated using random numbers to simulate actual user input.
public class c2a2q3_2022_NiallMurray {
    // Static ints declared to store total number of sightings and allow access to ints from BirdSightingMachine class.
    // Note, this is extra functionality not required in the question.
    static int totalCountA = 0;
    static int totalCountB = 0;

    // @param args - Startup arguments.
    public static void main(String[] args) {
        // Welcome message for potential user.
        System.out.println("Welcome to the Bird Sighting Counter!" + '\n');
        System.out.println("Here are the sightings recorded over 3 seasons: ");

        // Create object of BirdSightingMachine to access methods.
        BirdSightingMachine birdSights = new BirdSightingMachine();
        // Import Random class to generate random ints for sightings.
        Random random = new Random();
        // Variable to store random number generated by random.nextInt(100) in for loop.
        // 100 chosen as arbitrary limit for testing purposes.
        int randomCount;
        // Outer for loop to run 3 separate seasons
        // This method was used as the idea of a counter would be to increment for each sighting, rather than just pass season totals as random number.
        for (int i = 0; i < 3; i++) {
            // Generate random int under 100 to signify how many times Bird A was spotted.
            randomCount = random.nextInt(100);
            // for loop to call setBirdA() a random number of times to count each Bird A sighting.
            for (int j = 0; j < randomCount; j++) {
                birdSights.setBirdA();
            }
            // Update random int under 100 to signify how many times Bird B was spotted.
            randomCount = random.nextInt(100);
            // for loop to call setBirdB() a random number of times to count each Bird B sighting.
            for (int k = 0; k < randomCount; k++) {
                birdSights.setBirdB();
            }
            // Add totals of each season to overall totals.
            totalCountA += birdSights.getBirdA();
            totalCountB += birdSights.getBirdB();
            // Call displayTotals() to output results to user.
            birdSights.displayTotals();
            // Call reset() to return count to zero before new season.
            birdSights.reset();
        }
        // Call displayOverallTotals() to output totals of all 3 seasons combined to find overall winner.
        // Note this is surplus to requirements, but adds possibly useful functionality.
        birdSights.displayOverallTotals();
    }
    // Program outputs as expected!
}
